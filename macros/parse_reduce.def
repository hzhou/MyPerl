subcode:: reduce_prefix
    $if $(op_t)==T_FN_LIST
        switch ($(op_n)){
            $call @reduce_keyword_prefix
            default:
                $call error, "unsupported keyword"
                break
        }
    $else
        switch ($(op_t)){
            $call @reduce_prefix_cases
            default:
                $call error, "unsupported prefix"
                break
        }
    $call done, T_ATOM

    subcode: done(T)
        $call @debug_reduce_unary
        $(op_t)=$(T)
        $(op_op)=op
        i_top-=1
        continue

# ';' statement terminator
#       reduces all other op except BOC
# ';' follow atom reduces to block
# ';' follow EOC should dissolve ';'
subcode:: reduce_binary
    switch ($(op_t)){
        $call BIN, Semi, OP_SEQ
        $call BIN, Comma, OP_LIST
        $call BIN, Eq, OP_ASSIGN
        $call @reduce_binary_cases
        default:
            $call error, "unsupported binary op"
            break
    }
    $(term1) = op
    i_top-=2
    continue

    # -----------
    subcode: BIN_sym(v)
        $call BIN, $(sym:$(v)), OP_$(sym:$(v))

    subcode: BIN_op(v)
        $call BIN, $(v), OP_$(v)

    subcode: BIN(v, type)
        case T_$(v):
            $call @debug_reduce_binary
            op=f_new_op($(type),$(term1),$(term2))
            break

#----------------------------------------------- 
subcode:: resolve_op_op
    $case $(type:1)==T_Semi
        # cur.type must be T_EOC
        i_top--
        continue
        
subcode:: resolve_op_op
    $case cur.type==T_EOC && $(type:1)==T_BOC
        cur.type = T_ATOM
        cur.value.op = NULL
        i_top-=1
        break

