subcode:: define_ops
    $map define_op, UNARY

subcode:: reduce_prefix_statement
    switch ($(value:2).n){
        $call @reduce_prefix_statement_cases
    }
    $call error, "reduce_prefix_statement"

subcode:: reduce_prefix
    switch ($(op_t)){
        case T_FN_GOTO:
            $call @reduce_goto_etc
            break
        case T_FN_LIST:
        case T_FN_1:
            # print ... ...
            op_term=$(term)
            $if $(op_t)==T_FN_LIST
                f_flatten_op_list(op_term, OP_LIST, OP_list)
            $call new_op2, op, OP_UNARY, $(op_n), op_term
            break
        case T_UNARY:
            # print ( ... )
            op = $(op_op)
            $if op->type == OP_Fcall
                op->right.op = $(term)
            $else # OP_FN_LIST, OP_FN_1
                op->type = OP_UNARY
                # left is already set
                op->right.op = $(term)
            break
        $call @reduce_prefix_cases
        default:
            $call error, "unsupported prefix"
    }
    $call done, T_ATOM

    subcode: done(T)
        $call @debug_reduce_unary
        $(op_t)=$(T)
        $(op_op)=op
        i_top-=1
        goto try_reduce

fncode: make_op_FN_LIST(tn_word, op_term)
    $(set:op_n=tn_word)
    $(set:term=op_term)
    switch ($(op_n)){
        $call @reduce_keyword_prefix
        default:
            $call error, "unsupported FN_LIST"
    }
    return op
#----------------------------------------------- 
# ';' statement terminator
#       reduces all other op except BOC
# ';' follow atom reduces to block
# ';' follow EOC should dissolve ';'
subcode:: reduce_binary
    switch ($(op_t)){
        $call BIN, Comma, OP_LIST
        $call BIN, Eq, OP_ASSIGN
        $call @reduce_binary_cases
        default:
            $call error, "unsupported binary op [%s]", get_T_name($(op_t))
            break
    }
    $(term1) = op
    i_top-=2
    goto try_reduce

    # -----------
    subcode: BIN_sym(v)
        $call BIN, $(sym:$(v)), OP_$(sym:$(v))

    subcode: BIN_op(v)
        $call BIN, $(v), OP_$(v)

    subcode: BIN(v, type)
        case T_$(v):
            $call @debug_reduce_binary
            op=f_new_op($(type),$(term1),$(term2))
            break

