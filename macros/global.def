#- package name all ends with ::
#-------------------------------
subcode: add_package(name, len)
    $global darray g_stashes: struct stash *
    $set_var_attr stash_global, class=stash

    stash_global = stash_new()
    g_stashes.$push stash_global
    stash_global.$set $(name), $(len), g_stashes_len-1

subcode: _autoload
    $(block:main_init)
        $call add_package, "::", 2

fncode: find_global(s_name)
    # assume s_name is null-terminated
    $local char_sigil
    char_sigil = *s_name++
    
    s=s_name
    s_package_begin = s_name
    s_package_end=NULL
    $local stash
    $set_var_attr stash, class=stash
    $while *s
        $if s[0]==':' && s[1]==':'
            s+=2
            s_package_end = s
            s_name = s
        $else
            s++

    $if s_package_end
        $call get_stash
        s_name-=1
        *s_name = char_sigil
    $else
        stash = stash_global
        s_name-=1

    return stash.$get s_name, s-s_name

    subcode: get_stash
        stash = g_stashes[0]
        $(set:l=s_package_end-s_package_begin)
        i = stash.$get s_package_begin, $(l)
        $if i>0
            stash = g_stashes[i]
        $else
            croak("Package not found")
           
#----------------------------------------------- 
