macros:
    N_COPIES: 100

subcode: _autoload
    $global unsigned svcopy[$(N_COPIES)], i_svcopy=1, n_svcopy=1
    # make 0th unavailable
    $(block:main_init)
        svcopy[0]=1

fncode: get_copy
    $if n_svcopy>=$(N_COPIES)
        $call die, "Out of COPY counters!"

    $while svcopy[i_svcopy]
        $call inc_i_svcopy

    # $print get_copy: $i_svcopy
    svcopy[i_svcopy]=2 # at least two
    n_svcopy++
    return i_svcopy

    subcode: inc_i_svcopy
        # to optimize, use power of 2 and bit mask
        i_svcopy=(i_svcopy+1)%$(N_COPIES)

subcode: ret_copy(sv)
    $(set:i=$(sv)->copy)
    $if $(i)
        $my i
        i = $(i)
        $(i)=0

        $call assert, svcopy[i]>0
        svcopy[i]--
        $if svcopy[i]==0
            n_svcopy--
            # last copy, just take it
        $else
            # on_write: duplicate
            # on refdec: return (do not free)
            BLOCK

subcode: sv_on_write(sv)
    $(set:msg=sv_on_write)
    &call ret_copy, $(sv)
        BLOCK

#----------------------------------------------- 
#- ref: SV_refdec
subcode: sv_decopy
    $(set:msg=sv_decopy)
    &call ret_copy, sv
        goto sv_release

# -------------------------
fncode: SV_copy(sv_ret, sv)
    $if !sv
        $if !sv_ret
            return NULL
        $else
            sv_ret->type=SVt_undef
            sv_ret->value.p = NULL
            return sv_ret
    $if !sv_ret
        sv_ret = get_svreg(sv->type)
    $else
        sv_ret->type=sv->type

    $if sv->type > SVt_BASIC && sv->value.p
        $if !sv->copy
            sv_ret->copy = sv->copy = get_copy()
        $else
            svcopy[sv->copy]++
            sv_ret->copy = sv->copy
    memcpy(&sv_ret->value, &sv->value, sizeof(sv->value))
    return sv_ret

