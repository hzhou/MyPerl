#----------------------------------------------- 
# defines terminal names such as T_Comma, ...
# spcifies precedence
subcode: define_op_precedence
    $map op, left, or
    $map op, left, and
    $map op, pre, not
    $map op, pre, FN_LIST, FN_GOTO
    $map op, left, Comma
    $map op, right, =,+=,-=,*=,/=,%=,.=,|=,&=,^=,>>=,<<=,**=
    $map op, right, :, ?
    $map op, left, ..
    $map op, left, ||
    $map op, left, &&
    $map op, left, |,^
    $map op, left, &
    $map op, left, ==, !=, <=>, eq, ne, cmp
    $map op, left, <, >, <=, >=, lt, gt, le, ge
    $map op, pre, FN_1
    $map op, left, >>, <<
    $map op, left, +, -, .
    $map op, left, *, /, %, x
    $map op, left, =~
    $map op, pre, UMINUS, ~, !, UAMPER
    $map op, right, ** 
    $map op, pre, ++, --
    # $map op, post, ++, --
    $map op, left, ->
    $map op, pre, UNARY, SIGIL, MY
    
    # simple syntactic aliases
    $define(T_EqGt) T_Comma

#-- notes ---------------------
#-    x=: I never used this, woohoo for you
#-   ||=, &&=: seriously?
#-   &.=, |.=, ^.=: what are they?
#-   //=: what is it?

#---------------------------------------- 
#  consider: return $n if $n==0; 
#      we want if to reduce previous and absorb rest
subcode:: pre_shift_other
    $case cur.type==T_BOS_TEMP
        cur.type = T_BOS_HEAD
# 
