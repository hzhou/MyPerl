subcode: error(@msg)
    $print $(msg)
    $call debug_parse_stack
    exit(0)

subcode: assert(@cond)
    $if !($(cond))
        $print assert error: ! ($(cond))
        exit(0)

#----------------------------------------------- 
subcode: debug_parse_stack
    $(if:in_perl_parse)
        dump_parse_stack(stack, i_top, cur, s)
    $(else)
        $my struct TOK cur={0,0}
        dump_parse_stack(parse_stack, i_stack_top, cur, NULL)

fncode: dump_parse_stack(struct TOK* stack, i_top, struct TOK cur, s)
    $print "  stack: -"
    $for i=0:i_top
        $(set:t=stack[i].type)
        $(set:v=stack[i].value)
        $if $(t) == T_BOC
            $print "T_BOC%c, -", $(v).n
        $elif $(t) == T_EOC
            $print "T_EOC%c, -", $(v).n
        $elif $(t) == T_ATOM
            $print "[%s], -", get_OP_name($(v).op->type)
        $else
            $print "%s, -", get_T_name($(t))
    $if s
        $print "cur: %s", get_T_name(cur.type)
        $print "  src: [-"
        $print $s
    $else
        $print 
