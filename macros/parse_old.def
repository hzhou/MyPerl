# include: macros/parse.def
# include: macros/parse_yy.def
# include: macros/parse_lineseq.def

#----------------------------------------------- 
subcode: old_yyparse
    PL_expect = XSTATE;
    Perl_newPROG(f_parse_lineseq())
    return 0

#----------------------------------------------- 
subcode: dummy_startsub(T)
    $(T) = start_subparse(FALSE, 0)

subcode: dummy_startnonsub(T)
    $(T) = start_subparse(FALSE, CVf_ANON)

subcode: dummy_startuse(T)
    $(T) = start_subparse(FALSE, 0)
    CvSPECIAL_on(PL_compcv)

subcode: dummy_startformsub(T)
    $(T) = start_subparse(TRUE, 0)

fncode: parse_subname
    yychar=yylen()
    $call yy_assert, WORD
    $my STRLEN n_a, s_name
    $(set:sv=((SVOP*)yylval)->op_sv)
    s_name = SvPV($(sv), n_a)
    $(set:cond) join, ' || ', s_name $eq "*"
        BEGIN, END, INIT, CHECK
    $if $(cond)
        CvSPECIAL_on(PL_compcv)
    return yylval

#-----------------------------------------------
subcode: _autoload
    $call set_token_type, pval, LABEL label
    $call set_token_type, ival, '{' FORMAT SUB ANONSUB PACKAGE USE WHILE UNTIL IF UNLESS ELSE ELSIF CONTINUE FOR LOOPEX DOTDOT FUNC0 FUNC1 FUNC UNIOP LSTOP RELOP EQOP MULOP ADDOP DOLSHARP DO HASHBRACK NOAMP LOCAL MY MYSUB prog decl format startsub startuse startanonsub startformsub remember mremember '&'
    $call set_token_type, opval, WORD METHOD FUNCMETH THING PMFUNC PRIVATEREF FUNC0SUB UNIOPSUB LSTOPSUB block mblock lineseq line loop cond else expr term subscripted scalar ary hsh arylen star amper sideff argexpr nexpr texpr iexpr mexpr mnexpr mtexpr miexpr listexpr listexprcom indirob listop method formname subname proto subbody cont my_scalar subattrlist myattrlist mysubrout myattrterm myterm
    $call set_token_type, OPERATOR, %nonassoc PREC_LOW %nonassoc LOOPEX %left OROP %left ANDOP %right NOTOP %nonassoc LSTOP LSTOPSUB %left ',' %right ASSIGNOP %right '?' ':' %nonassoc DOTDOT %left OROR %left ANDAND %left BITOROP %left BITANDOP %nonassoc EQOP %nonassoc RELOP %nonassoc UNIOP UNIOPSUB %left SHIFTOP %left ADDOP %left MULOP %left MATCHOP %right '!' '~' UMINUS REFGEN %right POWOP %nonassoc PREINC PREDEC POSTINC POSTDEC %left ARROW %nonassoc ')' %left '(' %left '[' '{'

